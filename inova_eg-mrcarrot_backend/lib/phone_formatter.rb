class PhoneFormatter
    def self.format_phone(phone_number, country_code = "20")
        location  = "sa"
        countries_dict = {"93"=>"af", "355"=>"al", "213"=>"dz", "376"=>"ad", "244"=>"ao", "672"=>"aq", "54"=>"ar", "374"=>"am", "297"=>"aw", "61"=>"cc", "43"=>"at", "994"=>"az", "973"=>"bh", "880"=>"bd", "375"=>"by", "32"=>"be", "501"=>"bz", "229"=>"bj", "975"=>"bt", "591"=>"bo", "387"=>"ba", "267"=>"bw", "55"=>"br", "246"=>"io", "673"=>"bn", "359"=>"bg", "226"=>"bf", "257"=>"bi", "855"=>"kh", "237"=>"cm", "238"=>"cv", "236"=>"cf", "235"=>"td", "56"=>"cl", "86"=>"cn", "57"=>"co", "269"=>"km", "682"=>"ck", "506"=>"cr", "385"=>"hr", "53"=>"cu", "599"=>"an", "357"=>"cy", "420"=>"cz", "243"=>"cd", "45"=>"dk", "253"=>"dj", "670"=>"tl", "593"=>"ec", "20"=>"eg", "503"=>"sv", "240"=>"gq", "291"=>"er", "372"=>"ee", "251"=>"et", "500"=>"fk", "298"=>"fo", "679"=>"fj", "358"=>"fi", "33"=>"fr", "689"=>"pf", "241"=>"ga", "220"=>"gm", "995"=>"ge", "49"=>"de", "233"=>"gh", "350"=>"gi", "30"=>"gr", "299"=>"gl", "502"=>"gt", "224"=>"gn", "245"=>"gw", "592"=>"gy", "509"=>"ht", "504"=>"hn", "852"=>"hk", "36"=>"hu", "354"=>"is", "91"=>"in", "62"=>"id", "98"=>"ir", "964"=>"iq", "353"=>"ie", "972"=>"il", "39"=>"it", "225"=>"ci", "81"=>"jp", "962"=>"jo", "7"=>"ru", "254"=>"ke", "686"=>"ki", "383"=>"xk", "965"=>"kw", "996"=>"kg", "856"=>"la", "371"=>"lv", "961"=>"lb", "266"=>"ls", "231"=>"lr", "218"=>"ly", "423"=>"li", "370"=>"lt", "352"=>"lu", "853"=>"mo", "389"=>"mk", "261"=>"mg", "265"=>"mw", "60"=>"my", "960"=>"mv", "223"=>"ml", "356"=>"mt", "692"=>"mh", "222"=>"mr", "230"=>"mu", "262"=>"re", "52"=>"mx", "691"=>"fm", "373"=>"md", "377"=>"mc", "976"=>"mn", "382"=>"me", "212"=>"eh", "258"=>"mz", "95"=>"mm", "264"=>"na", "674"=>"nr", "977"=>"np", "31"=>"nl", "687"=>"nc", "64"=>"pn", "505"=>"ni", "227"=>"ne", "234"=>"ng", "683"=>"nu", "850"=>"kp", "47"=>"sj", "968"=>"om", "92"=>"pk", "680"=>"pw", "970"=>"ps", "507"=>"pa", "675"=>"pg", "595"=>"py", "51"=>"pe", "63"=>"ph", "48"=>"pl", "351"=>"pt", "974"=>"qa", "242"=>"cg", "40"=>"ro", "250"=>"rw", "590"=>"mf", "290"=>"sh", "508"=>"pm", "685"=>"ws", "378"=>"sm", "239"=>"st", "966"=>"sa", "221"=>"sn", "381"=>"rs", "248"=>"sc", "232"=>"sl", "65"=>"sg", "421"=>"sk", "386"=>"si", "677"=>"sb", "252"=>"so", "27"=>"za", "82"=>"kr", "211"=>"ss", "34"=>"es", "94"=>"lk", "249"=>"sd", "597"=>"sr", "268"=>"sz", "46"=>"se", "41"=>"ch", "963"=>"sy", "886"=>"tw", "992"=>"tj", "255"=>"tz", "66"=>"th", "228"=>"tg", "690"=>"tk", "676"=>"to", "216"=>"tn", "90"=>"tr", "993"=>"tm", "1-649"=>"tc", "688"=>"tv", "1-340"=>"vi", "256"=>"ug", "380"=>"ua", "971"=>"ae", "44"=>"gb", "1"=>"us", "598"=>"uy", "998"=>"uz", "678"=>"vu", "379"=>"va", "58"=>"ve", "84"=>"vn", "681"=>"wf", "967"=>"ye", "260"=>"zm", "263"=>"zw"}

        if country_code.to_s.include? "+"
            key = country_code.to_s.sub!("+","")
        else
            key = country_code.to_s
        end

        val = countries_dict[key]
        if val.present?
            location = val
        end

        puts "Checking #{phone_number} with #{country_code} with #{location} for key #{key}"
        number = GlobalPhone.parse(phone_number, location)
        if number.present?
            return {country_code: "+#{number.country_code}", phone: number.national_string}
        end
        return nil
    end
end
